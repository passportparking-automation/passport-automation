<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite name="Tests.SignUpPageTests" tests="1" time="122.827" ignored="44" failures="0" timestamp="31 Aug 2017 16:14:37 GMT" skipped="0" hostname="Jamess-MacBook-Pro-2.local" errors="1">
  <testcase name="CheckSignUpPageForExceptions" time="122.827" classname="Tests.SignUpPageTests">
    <error type="org.openqa.selenium.NoSuchElementException" message="Can&#039;t locate an element by this strategy: By.id: signUpButton">
      <![CDATA[org.openqa.selenium.NoSuchElementException: Can't locate an element by this strategy: By.id: signUpButton
	at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:119)
	at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:61)
	at io.appium.java_client.android.AndroidElement$$EnhancerByCGLIB$$c0b591f0.isDisplayed(<generated>)
	at Pages.SignUpPage.SignUpPageAndroid.CheckSigninPageForExceptions(SignUpPageAndroid.java:57)
	at Tests.SignUpPageTests.CheckSignUpPageForExceptions(SignUpPageTests.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction@2e18cdfc (tried for 35 second(s) with 500 MILLISECONDS interval)
	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:264)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:232)
	at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:91)
	at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:112)
	... 17 more
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.5.2', revision: '10229a9', time: '2017-08-21T17:29:55.15Z'
System info: host: 'Jamess-MacBook-Pro-2.local', ip: '2601:c0:c100:f5ef:0:0:0:7515', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.5', java.version: '1.8.0_60'
Driver info: io.appium.java_client.AppiumDriver
Capabilities [{app=/Users/jameskoch/Desktop/passportCI/ParkRight-staging_aug29_1058.apk, appPackage=com.parkopedia.parkright, deviceScreenSize=1200x1920, networkConnectionEnabled=true, warnings={}, databaseEnabled=false, deviceName=emulator-5554, platform=LINUX, deviceUDID=emulator-5554, appActivity=com.parkopedia.parkright.ParkRightApp, desired={app=/Users/jameskoch/Desktop/passportCI/ParkRight-staging_aug29_1058.apk, appPackage=com.parkopedia.parkright, appActivity=com.parkopedia.parkright.ParkRightApp, platformName=android, deviceName=Emulator2}, platformVersion=5.1.1, webStorageEnabled=false, locationContextEnabled=false, takesScreenshot=true, javascriptEnabled=true, deviceModel=Android SDK built for x86, platformName=android, deviceManufacturer=unknown}]
Session ID: 4d02b9e3-dc57-45bb-8a5f-ca3598e7508a
*** Element info: {Using=id, value=signUpButton}
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:82)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:45)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:89)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:641)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:414)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:62)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:457)
	at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:70)
	at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:406)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.pagefactory.bys.ContentMappedBy.findElement(ContentMappedBy.java:36)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:406)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.pagefactory.AppiumElementLocator.lambda$0(AppiumElementLocator.java:113)
	at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:167)
	at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:1)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:209)
	... 19 more
]]>
    </error>
  </testcase> <!-- CheckSignUpPageForExceptions -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="tearDownAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- tearDownAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
  <testcase name="initAppium" classname="Tests.AbstractBaseTests.TestBase">
    <skipped/>
  </testcase> <!-- initAppium -->
</testsuite> <!-- Tests.SignUpPageTests -->
